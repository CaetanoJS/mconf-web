- if params[:partial]
  = render :partial => 'shared/recording_list', :locals => { :meetings => @meetings, :show_authors => true }

- else

  - page_title t('spaces.sidebar.webconference'), in: @space.name
  - spaces_menu_at :webconference
  = render 'spaces/sidebar', space: @space, full: false

  -# - spaces_webconference_menu_at :recordings
  -# = render 'webconference_tabs'

  #space-recordings.content-block
    .content-block-header
      %h3
        = icon_recording
        = t('.title')

      -# only update the recording db if the user has permission to
      - if can?(:fetch_recordings, @webconf_room)

        -# TODO: This block below is almost duplicated at my/recordings.html.haml, find a way to merge
        -# them together.

        -# a form to trigger the method that will fetch the recordings in the webconf server
        -# TODO: setting data-type to html because bigbluebutton_rails is not returning a proper json on success yet
        = form_tag fetch_recordings_bigbluebutton_room_path(@webconf_room, :format => 'json'), :method => :post, :remote => true, :id => 'space-recordings-fetch', 'data-type' => 'html' do
          #space-recordings-error
            %span= t(".update_recordings.error")
            = icon_error
          #space-recordings-success
            %span= t(".update_recordings.success")
            = icon_success
          #space-recordings-loading
            %span= t(".update_recordings.updating")
            = icon_in_progress
        -# a form to get the html with the list of recordings after the list is updated
        = form_tag recordings_space_path(@space, :partial => true), :method => :get, :remote => true, :id => 'space-recordings-update'

    #space-recordings-list-container.content-block-middle
      = render :partial => 'shared/recording_list', :locals => { :meetings => @meetings, :show_authors => true }
