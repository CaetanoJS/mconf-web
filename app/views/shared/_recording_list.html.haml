-# Locals:
-#   recordings (Array of Recording)
-#   show_authors (boolean): show who created the recording?

-# TODO: #1087 show only recordings that are published

- show_authors = set_default(local_assigns, "show_authors", true)

%table.recording-list.table.table-hover
  %thead
    %tr
      - if show_authors
        %th.col-sm-2.meeting-date-col= t(".started_at")
        %th.col-sm-2.rec-author-col= t(".created_by")
        %th.col-sm-5.rec-description-col= t(".description")
        %th.col-sm-3.rec-playback-col= t(".playback_links")
      - else
        %th.col-sm-2.meeting-date-col= t(".started_at")
        %th.col-sm-6.rec-description-col= t(".description")
        %th.col-sm-4.rec-playback-col= t(".playback_links")
  %tbody
    - if meetings.count <= 0
      %tr
        - if show_authors
          %td{ :colspan => "4" }= t('.no_meetings')
        - else
          %td{ :colspan => "3" }= t('.no_meetings')
    - else
      - meetings.each do |meeting|
        - recording = meeting.recording

        %tr

          %td.meeting-date-col
            - if recording
              .meeting-date{ :title => t('.started_at_desc_with_rec', meeting_start: meeting.start_time, rec_start: recording.start_time, rec_end: recording.end_time) }
                = format_date(meeting.start_time)
            - else
              .meeting-date{ :title => t('.started_at_desc', meeting_start: meeting.start_time) }
                = format_date(meeting.start_time)

          - if show_authors
            %td.rec-author-col
              - unless meeting.creator_id.nil?
                - user = User.find_by(id: meeting.creator_id)
                .recording-author
                  - unless user.nil?
                    = link_to user.full_name, user_profile_path(user)
                  - else
                    %span= t('_other.user.removed')

          - if recording.present?
            -# To get the creator from the recording instead of meeting:
            -# - action = recording.room.owner_type == "User" ? :user_show : :space_show
            -# - if can?(action, recording)
            -#   - metaUser = recording.metadata.all.select{ |m| m.name == BigbluebuttonRails.metadata_user_id.to_s }.first

            %td.rec-description-col
              -# Edit description button
              - if recording.room.owner_type == "User"
                - if can?(:user_edit, recording)
                  = link_to icon_edit, edit_my_recording_path(recording), :class => "open-modal"
              - else
                - if can?(:space_edit, recording)
                  = link_to icon_edit, space_edit_recording_path(recording.room.owner, recording), :class => "open-modal"

              - if recording.published? && can?(:unpublish, recording)
                - if recording.available?
                  %li= link_to t('.unpublish').downcase, unpublish_bigbluebutton_recording_path(recording, redir_url: @redir_url), method: :post, data: { confirm: t('.unpublish_confirm') }
                - else
                  %li
                    -# TODO: for now we don't allow users to unpublish unavailable recordings because it would only generate
                    -# an error in the API call and would not actually unpublish it.
                    = content_tag :span, options_for_tooltip(t('.unpublish_unavailable'), { class: "disabled" }) do
                      = t('.unpublish').downcase

              - if can?(:manage, recording)
                %li= link_to t('.manage').downcase, edit_bigbluebutton_recording_path(recording)

              - if recording.description.blank?
                %span= t('.no_description')
              - else
                %span= recording.description

            %td.rec-playback-col
              = render :partial => 'shared/recording_playback', :locals => { :recording => recording }

          - else
            - if show_authors
              %td.rec-not-recorded-col{ :colspan => "3" }= t('.not_recorded')
            - else
              %td.rec-not-recorded-col{ :colspan => "2" }= t('.not_recorded')
