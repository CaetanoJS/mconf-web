- cls = user.disabled? ? "list-item-disabled" : ""
.list-item{ id: "user-#{user.permalink}", class: cls }
  .col-xs-12.col-sm-1
    .list-item-logo
      = raw logo_image(user, :size => '32', :title => user.name, :class => 'logo logo-user')

  .col-xs-12.col-sm-7
    - words = params[:q].try(:split)
    .user-username.list-text-title
      - if user.disabled?
        = Mconf::Highlighter.highlight(user.username, words)
      - else
        = link_to user_path(user) do
          = Mconf::Highlighter.highlight(user.username, words)
    .user-name.list-text-description
      = Mconf::Highlighter.highlight(user.full_name, words)
    .user-email.list-text-description
      = Mconf::Highlighter.highlight(user.email, words)
    .current-sign-in
      = t('.last_sign_in')
      - if user.current_sign_in_at
        %span.tooltipped{ title: user.current_sign_in_at }= "#{format_date(user.current_sign_in_at, :long) }"
        = " #{t('.auth_using')} #{user_last_sign_in_method(user).to_s}"
      - else
        %span.tooltipped{ title: t('.never_sign_in') }= "?"
      - methods = user_sign_in_methods(user).join(", ")
      = "(#{t('.available_auth')}: #{methods})"

  .col-xs-12.col-sm-2.user-category
    = user_category(user)

  .col-xs-12.col-sm-2.management-links.list-actions
    %ul
      - if user.disabled?
        = link_to enable_user_path(user), :data => { :confirm => t('.enable_confirm') }, :method => :post do
          = icon_enable(:alt => t('.enable'), :title => t('.enable'))
        = render 'manage/destroy_user', user: user

      - else
        = link_to (edit_user_path(user)) do
          = icon_edit(:alt => t('.edit'), :title => t('.edit'))
        - if !user.confirmed?
          = link_to confirm_user_path(user), :data => { :confirm => t('.confirm_confirm') }, :method => :post do
            = icon_confirm_user(:alt => t('.confirm'), :title => t('.confirm'))

        -# prevent admins from disabling and unapproving themselves
        - unless current_user == user && user.superuser
          - if current_site.require_registration_approval?
            = approval_links :user, user
          = link_to disable_user_path(user), :data => { :confirm => t('.disable_confirm') }, :method => :delete do
            = icon_disable(:alt => t('.disable'), :title => t('.disable'))
          = render 'manage/destroy_user', user: user
